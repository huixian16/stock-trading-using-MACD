# -*- coding: utf-8 -*-
"""CZ1103 project run script

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mX-BTPLrLJxoplVlmgFDLyM8FF8_8PkP
"""

import pandas as pd
import numpy as np
import statistics as stats

df = pd.read_excel('SPY_2016_2021.xlsx')
prices = df.Close.values.tolist()
#print(type(prices))
#print(type(df.Close))
days_LMA = 26
days_SMA = 12
first_choice = "EMA"
second_choice = "EMA"

def ssma(duration, dataset_size, dataset):       # Calculate using SSMA
  SSMA = []
  for i in range(duration, dataset_size):       
    SSMA_numbers = dataset[i-duration : i]
    SSMA.append(stats.mean(SSMA_numbers))
  return SSMA

def ema(duration, dataset_size, dataset):        # Calculate using EMA
  average = stats.mean(dataset[:duration])
  EMA = []
  prev_EMA = average
  EMA.append(prev_EMA)
  for i in range(duration, dataset_size-1):
    k = 2/(duration + 1)
    EMA_number = dataset[i] * np.float64(k) + prev_EMA * np.float64(1-k)
    EMA.append(EMA_number)
    prev_EMA = EMA_number
  return EMA

#print(df.Close[days_SMA])

if first_choice == "SSMA":            # Calculate SMA and LMA
  SMA = ssma(days_SMA, 1512, df.Close)
  LMA = ssma(days_LMA, 1512, df.Close)
elif first_choice == "EMA":
  SMA = ema(days_SMA, 1512, df.Close)
  LMA = ema(days_LMA, 1512, df.Close)

MACD = []                     # Calculate MACD
for i in range(1512 - days_LMA):
  macd = SMA[i + (days_LMA - days_SMA)] - LMA[i]
  MACD.append(macd)

if second_choice == "SSMA":     # Calculate signal_line
  signal_line = ssma(9, len(MACD)+1, MACD)
elif second_choice == "EMA":
  signal_line = ema(9, len(MACD)+1, MACD)

macd_hist = []          # Calculate MACD_histogram
for i in range(len(signal_line)):
  hist = MACD[i + 8] - signal_line[i]
  macd_hist.append(hist)

#--------------------------------incorporating MACD
buy_price = []
sell_price = []
macd_signal = []
signal = 0
asset_holdings = 0
capital = 100000
commission = 0.125
total_trades = 0
# Consider whether to round down asset_holdings to a whole number such that there
# is a remainder for capital
for i in range(len(macd_hist)):
  if (signal_line[i] < MACD[i+8]) and (macd_hist[i-1] < 0):       # to ensure crossover has already happen on current day, MACD histogram has to be negative the day before
    if signal != 1:
      asset_price = prices[i + days_LMA + 7]
      buy_price.append(asset_price)
      asset_holdings += (capital * ((100-commission) / 100)) / asset_price
      capital = 0
      sell_price.append(np.nan)
      total_trades += 1
      signal = 1
      macd_signal.append(signal)
    else:
        buy_price.append(np.nan)
        sell_price.append(np.nan)
        macd_signal.append(0)
  elif (signal_line[i] > MACD[i+8]) and (macd_hist[i-1] > 0):       # to ensure crossover has already happen on current day, MACD histogram has to be positive the day before
    if signal != -1:
      buy_price.append(np.nan)
      asset_price = prices[i + days_LMA + 7]
      sell_price.append(asset_price)
      capital += asset_holdings * asset_price * ((100-commission) / 100)
      asset_holdings = 0
      total_trades += 1
      signal = -1
      macd_signal.append(signal)
    else:
      buy_price.append(np.nan)
      sell_price.append(np.nan)
      macd_signal.append(0)
  else:
      buy_price.append(np.nan)
      sell_price.append(np.nan)
      macd_signal.append(0)

if capital > 0:
  returns = capital - 100000
  pct_change = returns / 100000 * 100
elif capital == 0:
  returns = asset_holdings * prices[-1] - 100000
  pct_change = returns / 100000 * 100

avg_return_per_trade = returns / total_trades
print ("The total returns is: ", returns)
print ("The total number of trades made is: ", total_trades)
print ("The average return per trade is: ", avg_return_per_trade)

#-----------------------BUY HOLD SELL strategy
initial_buy = (100000 * ((100-commission) / 100)) / prices[0]
end_sell = initial_buy * prices[-1] * ((100-commission) / 100)
bhs_returns = end_sell - 100000
print ("The returns for BUY-HOLD-SELL strategy is: ", bhs_returns)
print ("The difference between returns of MACD and BUY-HOLD-SELL strategy is: ", returns - bhs_returns)

#print(total_trades)
print("List of prices to buy on different dates: ", buy_price)
print("List of signals to buy/sell on different dates: ", macd_signal)
print("List of prices to sell on different dates: ", sell_price)
#print(prices[days_LMA + 7])
#print(macd_hist)
#print(signal_line)
#print(MACD_EMA)
#print(SSMA_SMA[14])

